// <auto-generated />
using System;
using ETP.Infra.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ETP.Infra.Persistence.Migrations
{
    [DbContext(typeof(SqlServerDBContext))]
    [Migration("20231113203430_MigrationsV1")]
    partial class MigrationsV1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ETP.Domain.Entities.FormasPagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(3)")
                        .HasColumnName("Codigo");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Descricao");

                    b.HasKey("Id");

                    b.ToTable("FormasPagamento", (string)null);
                });

            modelBuilder.Entity("ETP.Domain.Entities.Garagem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Codigo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nome");

                    b.Property<decimal>("PrecoHora")
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("PrecoHora");

                    b.Property<decimal>("PrecoHorasExtra")
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("PrecoHorasExtra");

                    b.Property<decimal>("PrecoMensalista")
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("PrecoMensalista");

                    b.HasKey("Id");

                    b.ToTable("Garagem", (string)null);
                });

            modelBuilder.Entity("ETP.Domain.Entities.Passagem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CarroMarca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CarroMarca");

                    b.Property<string>("CarroModelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CarroModelo");

                    b.Property<string>("CarroPlaca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CarroPlaca");

                    b.Property<string>("CodFormaPagamento")
                        .IsRequired()
                        .HasColumnType("varchar(3)")
                        .HasColumnName("CodFormaPagamento");

                    b.Property<string>("CodGaragem")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CodGaragem");

                    b.Property<DateTime>("DataHoraEntrada")
                        .HasColumnType("datetime")
                        .HasColumnName("DataHoraEntrada");

                    b.Property<DateTime?>("DataHoraSaida")
                        .HasColumnType("datetime")
                        .HasColumnName("DataHoraSaida");

                    b.Property<Guid>("FormasPagamentoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FormasPagamentoId");

                    b.Property<Guid>("GaragemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GaragemId");

                    b.HasKey("Id");

                    b.HasIndex("FormasPagamentoId");

                    b.HasIndex("GaragemId");

                    b.ToTable("Passagem", (string)null);
                });

            modelBuilder.Entity("ETP.Domain.Entities.Passagem", b =>
                {
                    b.HasOne("ETP.Domain.Entities.FormasPagamento", "FormasPagamento")
                        .WithMany()
                        .HasForeignKey("FormasPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETP.Domain.Entities.Garagem", "Garagem")
                        .WithMany("Passagens")
                        .HasForeignKey("GaragemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FormasPagamento");

                    b.Navigation("Garagem");
                });

            modelBuilder.Entity("ETP.Domain.Entities.Garagem", b =>
                {
                    b.Navigation("Passagens");
                });
#pragma warning restore 612, 618
        }
    }
}
